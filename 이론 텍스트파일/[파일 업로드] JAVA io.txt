@ I/O
>>> input/output

InputStream
OutputStream

# 들어가며
어떠한 프로그램이든 input와 output가 입니다.
예를 들면
키보드가 입력이 input이고 화면에 출력이 output입니다.
GUI프로그램에서는 이벤트가 입력이고 이벤트의 따른 명령문의 결과가 출력입니다. 
이 처럼 프로그램에서 데이터가 흐르는 개념을 스트림 또는 io스트림이라고 합니다.
모든 데이터의 흐름은 i/o이지만 처리하는 방식은 각각에 차이가 있습니다. 
그렇기 때문에 모든 i/o에 맞는 코드를 작성하고 적용 습득하는데는 한계가 있습니다.
java에서는 이러한 문제를 최상위 추상클래스 InputStream과 OutputStream를 상속받아서 
해결하게 하였습니다.

# JAVA에서 i/o 스트림 
자바는 기본적으로 바이트를 최소단위로 한 스트림을 사용합니다.
i/o를 구현한 최상의 추상클래스인 InputStream과 OutputStream이 있습니다.
InputStream은 read()메서드를 abstract 메서드로 지정하여 상속받는 
클래스들이 필수적으로 구현하게 하였습니다.
read(byte b)메서드는 기본적으로 1바이트의 데이터를 읽게 할 수 있습니다.
하지만 한 번 작업시 1바이트의 데이터를 읽는것은 너무나 느리기 때문에
바이트 배열을 인자로 받아서(read(byte[] buf)) 한번에 읽어오는 데이터 크기를 지정할 수도 있습니다.  
OutputStream은 write()메서드를 abstract 메서드로 지정하여 상속받는
클래스에서 필수적으로 구현하게 하였습니다.
write(byte[ ] b) OutputStream생성시 사용된 인자(파일)에 
바이트 배열의 크기의(0~b.length()) 모든 바이트를 내보냅니다(작성)


















