--JOIN TABLE
DROP SEQUENCE MEMBER_JOIN_SEQ;
DROP TABLE MEMBER_JOIN;

CREATE SEQUENCE MEMBER_JOIN_SEQ;
CREATE TABLE MEMBER_JOIN(
   JOIN_NO           NUMBER            NOT NULL,
   ID                VARCHAR2(200)       NOT NULL,
   JOIN_PW           VARCHAR2(200)       NOT NULL,
   JOIN_EMAIL        VARCHAR2(200)       NOT NULL,
   JOIN_ROLE         CHAR(6)            NOT NULL,
   JOIN_DATE         DATE              NOT NULL,
   JOIN_JOINED       CHAR(1)           NOT NULL,
   JOIN_REGISTER_YN    CHAR(1)          NOT NULL, 
   CONSTRAINT JOIN_PK PRIMARY KEY (ID),
   CONSTRAINT JOIN_UQ01 UNIQUE (JOIN_NO),
   CONSTRAINT JOIN_UQ02 UNIQUE (JOIN_EMAIL),
   CONSTRAINT JOIN_CH01_ROLE CHECK (JOIN_ROLE IN('멘토', '멘티', '관리')),
   CONSTRAINT JOIN_CH02_JOINED CHECK (JOIN_JOINED IN('Y','N')),
   CONSTRAINT JOIN_CH03_REGISTER CHECK (JOIN_REGISTER_YN IN('Y','N','W'))
);

--MENTEE01 
INSERT INTO MEMBER_JOIN VALUES (
   MEMBER_JOIN_SEQ.NEXTVAL,
   'MENTEE01',
   '1234',
   'MENTEE01@GMAIL.COM',
   '멘티',
   SYSDATE,
   'Y',
   'Y'
);

--MENTEE02
INSERT INTO MEMBER_JOIN VALUES (
   MEMBER_JOIN_SEQ.NEXTVAL,
   'MENTEE02',
   '1234',
   'MENTEE02@GMAIL.COM',
   '멘티',
   SYSDATE,
   'Y',
   'Y'
);

--MENTOR01
INSERT INTO MEMBER_JOIN VALUES (
   MEMBER_JOIN_SEQ.NEXTVAL,
   'MENTOR01',
   '1234',
   'MENTOR01@GMAIL.COM',
   '멘토',
   SYSDATE,
   'Y',
   'Y'
);
--ADMIN
INSERT INTO MEMBER_JOIN VALUES (
   MEMBER_JOIN_SEQ.NEXTVAL,
   'ADMIN',
   '1234',
   'ADMIN@GMAIL.COM',
   '관리',
   SYSDATE,
   'Y',
   'N'
);

SELECT * FROM MEMBER_JOIN ORDER BY JOIN_NO DESC;

DELETE 
FROM MEMBER_JOIN
WHERE JOIN_NO = 23;

--MEMBER PROFILE
DROP SEQUENCE MEMBER_PROFILE_SEQ;
DROP TABLE MEMBER_PROFILE;

CREATE SEQUENCE MEMBER_PROFILE_SEQ;
CREATE TABLE MEMBER_PROFILE
(
    MEMBER_NO             NUMBER            NOT NULL, 
    ID                    VARCHAR2(200)     NOT NULL, 
    MEMBER_ROLE           CHAR(6)           NOT NULL, 
    MEMBER_REGISTER_YN    CHAR(1)           NOT NULL, 
    MEMBER_NAME           VARCHAR2(20)      NOT NULL, 
    MEMBER_BIRTH          CHAR(10)          NOT NULL, 
    MEMBER_HEIGHT         VARCHAR2(20)      NOT NULL, 
    MEMBER_WEIGHT         VARCHAR2(20)      NOT NULL, 
    MEMBER_ADDR           VARCHAR2(1000)    NOT NULL, 
    MEMBER_PHONE          VARCHAR2(200)     NOT NULL, 
    MEMBER_ONE_INTRO      VARCHAR2(2000)    NOT NULL, 
    MEMBER_COIN           NUMBER,
    MEMBER_CAREER         VARCHAR2(4000), 
    MEMBER_CONTENT        VARCHAR2(4000), 
    MEMBER_SCORE          NUMBER, 
    MEMBER_GENDER         CHAR(1), 
    MEMBER_ACTIVITY       NUMBER, 
    MEMBER_BASAL          NUMBER, 
    MEMBER_BMI            NUMBER, 
    CONSTRAINT MEMBER_PROFILE_PK PRIMARY KEY (MEMBER_NO),
    CONSTRAINT MEMBER_PROFILE_UQ01 UNIQUE (ID),
    CONSTRAINT MEMBER_PROFILE_UQ02 UNIQUE (MEMBER_PHONE),
    CONSTRAINT MEMBER_PROFILE_CH01 CHECK (MEMBER_REGISTER_YN IN('Y','N')),
    CONSTRAINT MEMBER_PROFILE_CH02 CHECK (MEMBER_GENDER IN('F','M')),
    CONSTRAINT MEMBER_PROFILE_FK01 FOREIGN KEY(ID) REFERENCES MEMBER_JOIN(ID)
);

--MENTEE01 PROFILE
INSERT INTO MEMBER_PROFILE VALUES(
   MEMBER_PROFILE_SEQ.NEXTVAL, 
   'MENTEE01', 
   '멘티', 
   'Y',  
   '김멘티', 
   '20000104', 
   '170', 
   '56', 
   '서울특별시 강남구', 
   '010-1111-1111', 
   '저는 홈트를 좋아해요.', 
   0, 
   'NULL', 
   'NULL', 
   0,                 
   'M', 
   '2', 
   '0', 
   '0'); 

--MENTEE02 PROFILE
INSERT INTO MEMBER_PROFILE VALUES(
   MEMBER_PROFILE_SEQ.NEXTVAL, 
   'MENTEE02', 
   '멘티', 
   'Y',  
   '최자바', 
   '19960829', 
   '170', 
   '56', 
   '경기도 남양주시', 
   '010-0000-1111', 
   '건강하게 다이어트 하고 싶어요!', 
   0, 
   'NULL', 
   'NULL', 
   0,                 
   'F', 
   '3', 
   '0', 
   '0'); 

--MENTOR01 PROFILE
INSERT INTO MEMBER_PROFILE
VALUES(
MEMBER_PROFILE_SEQ.NEXTVAL, 'MENTOR01', '멘토', 
'Y',  '김코치', '19940104', '184', '83', 
'경기도 안양시', '010-0000-0000', '저는 헬스를 잘합니다.', 
2000, '다이어트/헬스/건강', '경력은...',0,   --멘토
'', 1, 0, 0);          

SELECT * FROM MEMBER_PROFILE

--JOIN테이블과 PROFILE테이블 join하여 ID로 맨토 정보 가져오기
SELECT
JOIN_NO, ID, JOIN_PW, JOIN_EMAIL, JOIN_ROLE, JOIN_DATE, JOIN_JOINED, JOIN_REGISTER_YN,
MEMBER_NO, MEMBER_NAME, MEMBER_BIRTH, MEMBER_HEIGHT, MEMBER_WEIGHT,
MEMBER_ADDR, MEMBER_PHONE, MEMBER_ONE_INTRO, 
MEMBER_COIN, MEMBER_CAREER, MEMBER_CONTENT, MEMBER_SCORE
FROM MEMBER_JOIN JOIN MEMBER_PROFILE USING(ID)
WHERE ID = '1994dbwogus';


--멘토 추가
INSERT INTO 
MEMBER_PROFILE(
	MEMBER_NO, ID, MEMBER_ROLE, MEMBER_REGISTER_YN, 
	MEMBER_NAME, MEMBER_BIRTH, MEMBER_HEIGHT, MEMBER_WEIGHT, MEMBER_ADDR, MEMBER_PHONE, 
	MEMBER_ONE_INTRO, MEMBER_COIN, MEMBER_CAREER, MEMBER_CONTENT, MEMBER_SCORE) 
VALUES(
	MEMBER_PROFILE_SEQ.NEXTVAL, 'ADMIN', '관리', 'Y', 
	'이름', 'yyyyMMdd', '180', '75', 'ㅁㅁ시 OO구 ㅁㅁ동', '1234-5678',
	'한 줄 자기소개', 0,'특기1,특기2,특기3', '프로필 사진', 0);
--멘토 수정
UPDATE MEMBER_PROFILE 
SET MEMBER_NAME = '이름수정', MEMBER_BIRTH = 'yyyyMMdd', MEMBER_HEIGHT = '180', MEMBER_WEIGHT = '75',
	MEMBER_ADDR = '사랑시 고백구 행복동', MEMBER_PHONE = '1234-5678', MEMBER_ONE_INTRO = '한 줄 소개 수정',
	MEMBER_CAREER = '특기1,특기2,특기3', MEMBER_CONTENT = '프로필 사진'
WHERE ID = 'ADMIN'


UPDATE MEMBER_PROFILE
SET MEMBER_COIN = 2000
WHERE ID = 'MENTOR01';

DELETE FROM MEMBER_PROFILE
WHERE ID = 'ADMIN';



--BOARD =========================================================================================================================
DROP SEQUENCE FREE_BOARD_SEQ;
DROP TABLE FREE_BOARD;

CREATE SEQUENCE FREE_BOARD_SEQ;

CREATE TABLE FREE_BOARD
(
    BOARD_NO          NUMBER             NOT NULL, 
    ID                VARCHAR2(200)      NOT NULL, 
    BOARD_NAME        VARCHAR2(200)      NOT NULL, 
    BOARD_TITLE       VARCHAR2(2000)     NOT NULL, 
    BOARD_CONTENT     CLOB               NOT NULL, 
    BOARD_REGDATE     DATE               NOT NULL, 
    BOARD_LIKE        NUMBER             NULL, 
    BOARD_FILEPATH    VARCHAR2(3000)	 NULL,
    BOARD_IMGPATH     VARCHAR2(3000)	 NULL,
    BOARD_THUMBNAIL   VARCHAR2(1000)	 NULL,
    CONSTRAINT FREE_BOARD_PK PRIMARY KEY (BOARD_NO),
    CONSTRAINT FREE_BOARD_FK01 FOREIGN KEY(ID) REFERENCES MEMBER_JOIN(ID)
);

--전채 선택
SELECT * FROM FREE_BOARD;

--SELECT ONE
-- 게시판 불러오기
SELECT * FROM FREE_BOARD
WHERE ID = 'MENTEE01'
AND BOARD_NO = 1;

-- 추가
INSERT INTO FREE_BOARD(BOARD_NO, ID, BOARD_NAME, BOARD_TITLE, BOARD_CONTENT, BOARD_REGDATE, BOARD_LIKE, BOARD_FILEPATH, BOARD_IMGPATH, BOARD_THUMBNAIL) 
VALUES(FREE_BOARD_SEQ.NEXTVAL, 'MENTEE01', '김멘티', '글제목', '글내용', SYSDATE, 0, '파일경로', '이미지경로1,이미지경로2,이미지경로3', '썸내일 이미지');

-- 게시판 수정
UPDATE FREE_BOARD
SET BOARD_TITLE = '', BOARD_CONTENT = '', BOARD_REGDATE = SYSDATE
WHERE ID = 'MENTEE01';

-- 이미지 수정
UPDATE FILE_BOARD
SET 

-- 삭제
DELETE FREE_BOARD
WHERE ID = 'MENTEE01';


--COMMENT BOARD ===================================================================================================================
DROP SEQUENCE COMMENT_BOARD_SEQ;
DROP TABLE COMMENT_BOARD;

CREATE SEQUENCE COMMENT_BOARD_SEQ;
CREATE TABLE COMMENT_BOARD
(
    COMMENT_NO         NUMBER             NOT NULL, 
    BOARD_NO           NUMBER             NOT NULL, 
    COMMENT_GROUPNO    NUMBER             NOT NULL, 
    ID                 VARCHAR2(200)      NOT NULL, 
    COMMENT_NAME       VARCHAR2(200)      NOT NULL, 
    COMMENT_CONTENT    VARCHAR2(2000)     NOT NULL, 
    COMMENT_REGDATE    DATE               NOT NULL, 
    CONSTRAINT COMMENT_BOARD_PK PRIMARY KEY (COMMENT_NO),
    CONSTRAINT COMMENT_BOARD_FK01 FOREIGN KEY(ID) REFERENCES MEMBER_JOIN(ID),
    CONSTRAINT COMMENT_BOARD_FK02 FOREIGN KEY(BOARD_NO) REFERENCES FREE_BOARD(BOARD_NO)
);

-- 전채 선택
SELECT * FROM COMMENT_BOARD;

-- SELECT ONE

-- 내가 작성한 전채 글확인

-- 추가
INSERT INTO COMMENT_BOARD
VALUES(COMMENT_BOARD_SEQ.NEXTVAL, 1, 0, 'MENTEE01', '김멘티', '답글입니다.', SYSDATE);

-- 수정
UPDATE COMMENT_BOARD
SET COMMENT_CONTENT = '', COMMENT_REGDATE = SYSDATE
WHERE BOARD_NO = 1
AND COMMENT_GROUPNO = 1
AND ID = 'MENTEE01';

-- 삭제 + 멀티 삭제
DELETE COMMENT_BOARD
WHERE BOARD_NO = 1
AND COMMENT_GROUPNO = 1
AND ID = 'MENTEE01';














-- 사용안함
-- FILE_BOARD ====================================================================================================--=====
DROP SEQUENCE FILE_BOARD_SEQ;
DROP TABLE FILE_BOARD;

CREATE SEQUENCE FILE_BOARD_SEQ;
CREATE TABLE FILE_BOARD
(
    FILE_NO          NUMBER            NOT NULL, 
    FILE_GROUP_NO    NUMBER            NOT NULL, 
    FILE_CATEGORY    CHAR(2)     	   NOT NULL, 
    FILE_FILE_NO     NUMBER            NULL, 
    FILE_PATH        VARCHAR2(2000)    NOT NULL, 
    CONSTRAINT FILE_BOARD_PK PRIMARY KEY (FILE_NO),
    CONSTRAINT FILE_BOARD_CH01 CHECK (FILE_CATEGORY IN('I','F'))
);


SELECT * FROM FILE_BOARD;

-- 이미지 추가
INSERT INTO FILE_BOARD 
VALUES(FILE_BOARD_SEQ.NEXTVAL, 1, 'I', 1, '경로');

INSERT INTO FILE_BOARD 
VALUES(FILE_BOARD_SEQ.NEXTVAL, 1, 'I', 2, '경로2');

INSERT INTO FILE_BOARD 
VALUES(FILE_BOARD_SEQ.NEXTVAL, 1, 'I', 3, '경로3');


-- 파일 추가(일단은 멀티 업로드 구현X)
INSERT INTO FILE_BOARD 
VALUES(FILE_BOARD_SEQ.NEXTVAL, 2, 'F', 1, '파일경로');

-- 삭제
DELETE FROM FILE_BOARD
WHERE FILE_NO = 4;



--BOARD 버전2 =========================================================================================================================
DROP SEQUENCE FREE_BOARD_SEQ;
DROP TABLE FREE_BOARD;

CREATE SEQUENCE FREE_BOARD_SEQ;

CREATE TABLE FREE_BOARD
(
    BOARD_NO          NUMBER             NOT NULL, 
    ID                VARCHAR2(200)      NOT NULL, 
    BOARD_NAME        VARCHAR2(200)      NOT NULL, 
    BOARD_TITLE       VARCHAR2(2000)     NOT NULL, 
    BOARD_CONTENT     CLOB               NOT NULL, 
    BOARD_REGDATE     DATE               NOT NULL, 
    BOARD_LIKE        NUMBER             NULL, 
    BOARD_FILEPATH    VARCHAR2(2000)	 NULL,
    FILE_NO    		  NUMBER			 NULL,
    CONSTRAINT FREE_BOARD_PK PRIMARY KEY (BOARD_NO),
    CONSTRAINT FREE_BOARD_FK01 FOREIGN KEY(ID) REFERENCES MEMBER_JOIN(ID),
    CONSTRAINT FREE_BOARD_FK02 FOREIGN KEY(FILE_NO) REFERENCES FILE_BOARD(FILE_NO)
);

--전채 선택
SELECT * FROM FREE_BOARD;

--SELECT ONE
-- 게시판 불러오기
SELECT * FROM FREE_BOARD
WHERE ID = 'MENTEE01';

-- 추가
INSERT INTO FREE_BOARD(BOARD_NO, ID, BOARD_NAME, BOARD_TITLE, BOARD_CONTENT, BOARD_REGDATE, BOARD_LIKE, BOARD_FILEPATH, FILE_NO) 
VALUES(FREE_BOARD_SEQ.NEXTVAL, 'MENTEE01', '김멘티', '글제목', '글내용', SYSDATE, 0, '파일경로', 1);

-- 게시판 수정
UPDATE FREE_BOARD
SET BOARD_TITLE = '', BOARD_CONTENT = '', BOARD_REGDATE = SYSDATE
WHERE ID = 'MENTEE01';

-- 연결된 이미지 수정

UPDATE FILE_BOARD
SET 

-- 게시판에 속한 이미지 가져와 보기
-- 1) 게시판의 PK를 이용해 게시판에서 외래키인 FILE_NO를 가져온다 
-- 2) FILE_BOARD테이블에서 FILE_NO(PK)를 이용해 그룹번호를 가지고 온다
-- 3) 가져온 그룹번호와 일치하는 로우를 전부불러온다.
SELECT * FROM FILE_BOARD
WHERE FILE_GROUP_NO IN
	(SELECT FILE_GROUP_NO FROM FILE_BOARD 
		WHERE FILE_NO IN (SELECT FILE_NO FROM FREE_BOARD WHERE ID = 'MENTEE01'));


-- 삭제
DELETE FREE_BOARD
WHERE ID = 'MENTEE01';

